generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  password      String
  role          UserRole        @default(USER)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  profileImage  String?
  username      String          @unique
  counselor     Counselor?
  sentMessages  Message[]       @relation("SentMessages")
  receivedMessages Message[]    @relation("ReceivedMessages")
  bookedSessions BookedSession[]

  @@map("user")
}

enum UserRole {
  USER
  COUNSELOR
  ADMIN
}

model Counselor {
  id        String          @id @default(uuid())
  userId    String          @unique
  user      User            @relation(fields: [userId], references: [id])
  approved  Boolean         @default(false)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  sessions  BookedSession[]
  image     String?

  @@map("counselors")
}

model BookedSession {
  id             String       @id @default(uuid())
  userId         String
  counselorId    String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  user           User         @relation(fields: [userId], references: [id])
  counselor      Counselor    @relation(fields: [counselorId], references: [userId])

  @@map("booked_sessions")
}

model Resource {
  id          String   @id @default(uuid())
  title       String
  url         String
  description String?

  @@map("resources")
}

model Message {
  id          String   @id @default(uuid())
  senderId    String
  receiverId  String
  content     String
  timestamp   DateTime @default(now())
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}
